name: Playwright parity matrix (manual)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      run_id:
        description: "Optional run identifier"
        required: false

permissions:
  contents: read
  actions: read

jobs:
  parity:
    name: Parity â€” ${{ matrix.browser }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    env:
      # use provided run_id when manually dispatched, otherwise fallback to github.run_id
      RUN_ID: ${{ github.event.inputs.run_id || github.run_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install pnpm and dependencies
        run: |
          npm install -g pnpm
          pnpm install --frozen-lockfile
        shell: bash

      - name: Ensure Playwright browsers are installed
        # This will download browsers needed by playwright tests/exporter
        run: |
          pnpm dlx playwright install --with-deps
        shell: bash

      - name: Create output folder
        run: mkdir -p out
        shell: bash

      - name: Run Playwright exporter (per-browser)
        id: export
        run: |
          echo "Running parity export for browser=${{ matrix.browser }} RUN_ID=${RUN_ID}"
          # Example call: adjust flags to match your local exporter CLI
          pnpm node scripts/svg-to-png-pw.mjs \
            --browser "${{ matrix.browser }}" \
            --dpr 1 \
            --embed-fonts \
            --outdir out
          echo "Export exit code: $?"
          ls -l out || true
        shell: bash

      - name: Upload parity artifacts
        uses: actions/upload-artifact@v4
        with:
          # include the run id and browser in artifact name for easy correlation
          name: parity-${{ matrix.browser }}-${{ env.RUN_ID }}
          path: out

      - name: Print debug info
        run: |
          echo "GITHUB_RUN_ID=${{ github.run_id }}"
          echo "INPUT_RUN_ID=${{ github.event.inputs.run_id }}"
          echo "RUN_ID_ENV=${RUN_ID}"
        shell: bash
